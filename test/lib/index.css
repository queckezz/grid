/*
 * Require some sort of `base`
 */

* {
  box-sizing: border-box;
}

:root {
  /**
   * Grid scale
   */
  /**
   * Container width
   */
}

/**
 * Defines a new Grid.
 */

.Grid {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: column wrap;
  -ms-flex-flow: column wrap;
  flex-flow: column wrap;
}

/**
 * Distribute Cells evenly
 */

.Grid--distribute > .Grid_cell {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

/**
 * Control width manually
 */

.Grid_cell--full {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

/**
 * Position utlities
 */

.Grid--center {
  -webkit-box-align: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
}

.Grid--baseline {
  -webkit-box-align: baseline;
  -webkit-align-items: baseline;
  -ms-flex-align: baseline;
  align-items: baseline;
}

.Grid--stretch {
  -webkit-box-align: stretch;
  -webkit-align-items: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
}

.Grid--start {
  -webkit-box-align: start;
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  align-items: flex-start;
}

.Grid--end {
  -webkit-box-align: end;
  -webkit-align-items: flex-end;
  -ms-flex-align: end;
  align-items: flex-end;
}

.Grid--main-start {
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.Grid--main-end {
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.Grid--main-center {
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.Grid--main-around {
  -webkit-justify-content: space-around;
  -ms-flex-pack: distribute;
  justify-content: space-around;
}

.Grid--main-between {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

/*.Grid-cell--top {
  align-self: flex-start;
}

.Grid-cell--bottom {
  align-self: flex-end;
}

.Grid-cell--center {
  align-self: center;
}*/

.Grid--gutters > .Grid_cell:not(:last-of-type) {
  padding-bottom: 1em;
}

/**
 * Grid on small devices
 */

@media (min-width: 40em) {
  /**
   * Expand grid from stacked to inline
   */

  .s-Grid--expand {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }

  /**
   * Widths of individual grid cells
   */

  .s-Grid--1of2 > .Grid_cell {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 50%;
    -ms-flex: 0 0 50%;
    flex: 0 0 50%;
  }

  .s-Grid--1of3 > .Grid_cell {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 33.33333333333333%;
    -ms-flex: 0 0 33.33333333333333%;
    flex: 0 0 33.33333333333333%;
  }

  .s-Grid--1of4 > .Grid_cell {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 25%;
    -ms-flex: 0 0 25%;
    flex: 0 0 25%;
  }

  .s-Grid--1of5 > .Grid_cell {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 20%;
    -ms-flex: 0 0 20%;
    flex: 0 0 20%;
  }

  .s-Grid--1of6 > .Grid_cell {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 16.666666666666664%;
    -ms-flex: 0 0 16.666666666666664%;
    flex: 0 0 16.666666666666664%;
  }

  /**
   * Gutter (spacing between grid cells)
   */

  .Grid--gutters.s-Grid--expand > .Grid_cell:not(:last-of-type) {
    padding-right: 1em;
    padding-bottom: 0;
  }

  .Grid--gutters.s-Grid--1of2 > .Grid_cell:not(:nth-child(2n)),
  .Grid--gutters.s-Grid--1of3 > .Grid_cell:not(:nth-child(3n)),
  .Grid--gutters.s-Grid--1of4 > .Grid_cell:not(:nth-child(4n)),
  .Grid--gutters.s-Grid--1of5 > .Grid_cell:not(:nth-child(5n)),
  .Grid--gutters.s-Grid--1of6 > .Grid_cell:not(:nth-child(6n)) {
    padding-right: 1em;
    padding-bottom: 1em;
  }

  /**
   * Reset paddings from previous viewport gutter sizes
   */

  .Grid--gutters.s-Grid--1of2 > .Grid_cell:nth-child(2n),
  .Grid--gutters.s-Grid--1of3 > .Grid_cell:nth-child(3n),
  .Grid--gutters.s-Grid--1of4 > .Grid_cell:nth-child(4n),
  .Grid--gutters.s-Grid--1of5 > .Grid_cell:nth-child(5n),
  .Grid--gutters.s-Grid--1of6 > .Grid_cell:nth-child(6n) {
    padding: 0;
  }
}

/**
 * Grid on medium devices
 */

@media (min-width: 52em) {
  /**
   * Expand grid from stacked to inline
   */

  .m-Grid--expand {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }

  /**
   * Widths of individual grid cells
   */

  .m-Grid--1of2 > .Grid_cell {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 50%;
    -ms-flex: 0 0 50%;
    flex: 0 0 50%;
  }

  .m-Grid--1of3 > .Grid_cell {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 33.33333333333333%;
    -ms-flex: 0 0 33.33333333333333%;
    flex: 0 0 33.33333333333333%;
  }

  .m-Grid--1of4 > .Grid_cell {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 25%;
    -ms-flex: 0 0 25%;
    flex: 0 0 25%;
  }

  .m-Grid--1of5 > .Grid_cell {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 20%;
    -ms-flex: 0 0 20%;
    flex: 0 0 20%;
  }

  .m-Grid--1of6 > .Grid_cell {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 16.666666666666664%;
    -ms-flex: 0 0 16.666666666666664%;
    flex: 0 0 16.666666666666664%;
  }

  /**
   * Gutter (spacing between grid cells)
   */

  .Grid--gutters.m-Grid--expand > .Grid_cell:not(:last-of-type) {
    padding-right: 1em;
    padding-bottom: 0;
  }

  .Grid--gutters.m-Grid--1of2 > .Grid_cell:not(:nth-child(2n)),
  .Grid--gutters.m-Grid--1of3 > .Grid_cell:not(:nth-child(3n)),
  .Grid--gutters.m-Grid--1of4 > .Grid_cell:not(:nth-child(4n)),
  .Grid--gutters.m-Grid--1of5 > .Grid_cell:not(:nth-child(5n)),
  .Grid--gutters.m-Grid--1of6 > .Grid_cell:not(:nth-child(6n)) {
    padding-right: 1em;
    padding-bottom: 1em;
  }

  /**
   * Reset paddings from previous viewport gutter sizes
   */

  .Grid--gutters.m-Grid--1of2 > .Grid_cell:nth-child(2n),
  .Grid--gutters.m-Grid--1of3 > .Grid_cell:nth-child(3n),
  .Grid--gutters.m-Grid--1of4 > .Grid_cell:nth-child(4n),
  .Grid--gutters.m-Grid--1of5 > .Grid_cell:nth-child(5n),
  .Grid--gutters.m-Grid--1of6 > .Grid_cell:nth-child(6n) {
    padding: 0;
  }
}

/**
 * Grid on large devices
 */

@media (min-width: 64em) {
  /**
   * Expand grid from stacked to inline
   */

  .l-Grid--expand {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }

  /**
   * Widths of individual grid cells
   */

  .l-Grid--1of2 > .Grid_cell {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 50%;
    -ms-flex: 0 0 50%;
    flex: 0 0 50%;
  }

  .l-Grid--1of3 > .Grid_cell {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 33.33333333333333%;
    -ms-flex: 0 0 33.33333333333333%;
    flex: 0 0 33.33333333333333%;
  }

  .l-Grid--1of4 > .Grid_cell {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 25%;
    -ms-flex: 0 0 25%;
    flex: 0 0 25%;
  }

  .l-Grid--1of5 > .Grid_cell {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 20%;
    -ms-flex: 0 0 20%;
    flex: 0 0 20%;
  }

  .l-Grid--1of6 > .Grid_cell {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 16.666666666666664%;
    -ms-flex: 0 0 16.666666666666664%;
    flex: 0 0 16.666666666666664%;
  }

  /**
   * Gutter (spacing between grid cells)
   */

  .Grid--gutters.l-Grid--expand > .Grid_cell:not(:last-of-type) {
    padding-right: 1em;
    padding-bottom: 0;
  }

  .Grid--gutters.l-Grid--1of2 > .Grid_cell:not(:nth-child(2n)),
  .Grid--gutters.l-Grid--1of3 > .Grid_cell:not(:nth-child(3n)),
  .Grid--gutters.l-Grid--1of4 > .Grid_cell:not(:nth-child(4n)),
  .Grid--gutters.l-Grid--1of5 > .Grid_cell:not(:nth-child(5n)),
  .Grid--gutters.l-Grid--1of6 > .Grid_cell:not(:nth-child(6n)) {
    padding-right: 1em;
    padding-bottom: 1em;
  }

  /**
   * Reset paddings from previous viewport gutter sizes
   */

  .Grid--gutters.l-Grid--1of2 > .Grid_cell:nth-child(2n),
  .Grid--gutters.l-Grid--1of3 > .Grid_cell:nth-child(3n),
  .Grid--gutters.l-Grid--1of4 > .Grid_cell:nth-child(4n),
  .Grid--gutters.l-Grid--1of5 > .Grid_cell:nth-child(5n),
  .Grid--gutters.l-Grid--1of6 > .Grid_cell:nth-child(6n) {
    padding: 0;
  }
}

/**
 * Utility class for a container
 */

.u-contain {
  max-width: 64em;
}